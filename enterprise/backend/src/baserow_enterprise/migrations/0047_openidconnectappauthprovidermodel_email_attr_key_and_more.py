# Generated by Django 5.0.13 on 2025-05-06 13:25

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("baserow_enterprise", "0046_fieldpermissions"),
    ]

    operations = [
        migrations.AddField(
            model_name="openidconnectappauthprovidermodel",
            name="email_attr_key",
            field=models.CharField(
                db_default="email",
                default="email",
                help_text="The name of the claim that contains the email address of the user.",
                max_length=32,
            ),
        ),
        migrations.AddField(
            model_name="openidconnectappauthprovidermodel",
            name="first_name_attr_key",
            field=models.CharField(
                db_default="name",
                default="name",
                help_text="The key in the OIDC response that contains the first name of the user.",
                max_length=32,
            ),
        ),
        migrations.AddField(
            model_name="openidconnectappauthprovidermodel",
            name="issuer",
            field=models.URLField(db_default="", default="", help_text="Issuer"),
        ),
        migrations.AddField(
            model_name="openidconnectappauthprovidermodel",
            name="jwks_url",
            field=models.URLField(
                db_default="", default="", help_text="URL to get JSON Web Key Set"
            ),
        ),
        migrations.AddField(
            model_name="openidconnectappauthprovidermodel",
            name="last_name_attr_key",
            field=models.CharField(
                blank=True,
                db_default="",
                default="",
                help_text="The key in the OIDC response that contains the last name of the user. If empty in response, first name will be used.",
                max_length=32,
            ),
        ),
        migrations.AddField(
            model_name="openidconnectappauthprovidermodel",
            name="use_id_token",
            field=models.BooleanField(
                db_default=False,
                default=False,
                help_text="Whether to use the id_token instead of user_info endpoint to get user data",
            ),
        ),
        migrations.AddField(
            model_name="openidconnectauthprovidermodel",
            name="email_attr_key",
            field=models.CharField(
                db_default="email",
                default="email",
                help_text="The name of the claim that contains the email address of the user.",
                max_length=32,
            ),
        ),
        migrations.AddField(
            model_name="openidconnectauthprovidermodel",
            name="first_name_attr_key",
            field=models.CharField(
                db_default="name",
                default="name",
                help_text="The key in the OIDC response that contains the first name of the user.",
                max_length=32,
            ),
        ),
        migrations.AddField(
            model_name="openidconnectauthprovidermodel",
            name="issuer",
            field=models.URLField(db_default="", default="", help_text="Issuer"),
        ),
        migrations.AddField(
            model_name="openidconnectauthprovidermodel",
            name="jwks_url",
            field=models.URLField(
                db_default="", default="", help_text="URL to get JSON Web Key Set"
            ),
        ),
        migrations.AddField(
            model_name="openidconnectauthprovidermodel",
            name="last_name_attr_key",
            field=models.CharField(
                blank=True,
                db_default="",
                default="",
                help_text="The key in the OIDC response that contains the last name of the user. If empty in response, first name will be used.",
                max_length=32,
            ),
        ),
        migrations.AddField(
            model_name="openidconnectauthprovidermodel",
            name="use_id_token",
            field=models.BooleanField(
                db_default=False,
                default=False,
                help_text="Whether to use the id_token instead of user_info endpoint to get user data",
            ),
        ),
    ]
