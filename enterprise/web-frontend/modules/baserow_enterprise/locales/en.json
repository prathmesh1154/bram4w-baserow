{
  "clientHandler": {
    "cannotDisableAllAuthProvidersTitle": "Last enabled provider",
    "cannotDisableAllAuthProvidersDescription": "It is not possible to disable or delete last enabled provider."
  },
  "advanced": {
    "license": "Advanced"
  },
  "enterprise": {
    "license": "Enterprise",
    "sidebarTooltip": "Your account has access to the enterprise features globally",
    "rbac": "RBAC",
    "sso": "SSO",
    "licenseDescription": "Viewers are free with Baserow Enterprise. If a user has any other role, in any workspace then they will use a paid seat automatically.",
    "overflowWarning": "You have too many non-viewer users and have used up all of your paid seats. Change users to become viewers on each workspaces members page.",
    "deactivated": "Available in the advanced/enterprise version"
  },
  "trashType": {
    "team": "team"
  },
  "createTeamModal": {
    "title": "Create team",
    "invalidNameTitle": "Please use a different name",
    "invalidNameMessage": "This team name is already in use in the specified workspace."
  },
  "updateTeamModal": {
    "title": "Update {teamName}",
    "invalidNameTitle": "Please use a different name",
    "invalidNameMessage": "This team name is already in use in the specified workspace."
  },
  "manageTeamModals": {
    "subheading": "Teams allow you to give or restrict permissions in bulk to multiple people."
  },
  "manageTeamForm": {
    "submit": "Save",
    "nameTitle": "Name",
    "roleTitle": "Default role",
    "inviteMembers": "Add members",
    "membersTitle": "Members",
    "noSubjectsSelected": "Click '{buttonLabel}' to optionally add team users.",
    "roleHelpText": "User specific roles will always override Team roles."
  },
  "editTeamContext": {
    "edit": "Edit team",
    "remove": "Delete team"
  },
  "teamsTable": {
    "title": "{teamCount} teams in {workspaceName}",
    "createNew": "Create team",
    "nameColumn": "Name",
    "createdColumn": "Created on",
    "subjectsColumn": "Members",
    "roleColumn": "Default role",
    "roleHelpText": "Can be overriden with roles on databases and tables."
  },
  "subjectSampleField": {
    "titleAttr": "{subjectCount} members in this team."
  },
  "teamsSettings": {
    "teamsTabTitle": "Teams"
  },
  "adminType": {
    "AuditLog": "Audit log",
    "Authentication": "Authentication"
  },
  "auditLog": {
    "adminTitle": "Audit log",
    "workspaceTitle": "Audit log - {workspaceName}",
    "filterUserTitle": "User",
    "filterWorkspaceTitle": "Workspace",
    "filterActionTypeTitle": "Event Type",
    "filterFromTimestampTitle": "From Date",
    "filterFromTimestamp": "From Date",
    "filterToTimestampTitle": "To Date",
    "filterToTimestamp": "To Date",
    "user": "User",
    "workspace": "Workspace",
    "actionType": "Event Type",
    "description": "Description",
    "timestamp": "Timestamp",
    "ip_address": "IP Address",
    "exportToCsv": "Export to CSV",
    "exportModalTitle": "Export to CSV",
    "clearFilters": "Clear",
    "allUsers": "All Users",
    "allWorkspaces": "All Workspaces",
    "allActionTypes": "All Event Types"
  },
  "auditLogExportModal": {
    "title": "Export to CSV",
    "exportFilename": "Admin Audit Log Export - {date}",
    "exportWorkspaceFilename": " Workspace ({workspaceId}) Audit Log Export - {date}",
    "cancelledTitle": "Export failed",
    "cancelledDescription": "Something went wrong while exporting the audit log. Please try again."
  },
  "authProviders": {
    "title": "Authentication Providers",
    "noProviders": "No authentication providers configured yet.",
    "addProvider": "Add provider"
  },
  "authProviderTypes": {
    "password": "Email and password authentication",
    "saml": "SSO SAML provider",
    "ssoSamlProviderName": "SSO SAML: {domain}",
    "ssoSamlProviderNameUnconfigured": "Unconfigured SSO SAML",
    "ssoOIDCProviderNameUnconfigured": "Unconfigured OpenId connect"
  },
  "editAuthProviderMenuContext": {
    "edit": "Edit",
    "delete": "Delete"
  },
  "samlSettingsForm": {
    "domain": "SAML Domain",
    "domainPlaceholder": "Insert the company domain name...",
    "invalidDomain": "Invalid domain name",
    "domainAlreadyExists": "A SAML provider for this domain already exists",
    "metadata": "Metadata",
    "metadataPlaceholder": "Paste the Identity Provider metadata...",
    "invalidMetadata": "Invalid XML metadata for the Identity Provider",
    "relayStateUrl": "Default Relay State URL",
    "acsUrl": "Single Sign On URL",
    "providerIsVerified": "The provider has been verified",
    "samlResponseSettings": "SAML Response Attributes",
    "defaultAttrs": "Default",
    "customAttrs": "Custom",
    "emailAttrKey": "Email",
    "emailAttrKeyHelper": "The email address that will be used as username for the user.",
    "firstNameAttrKey": "First name",
    "firstNameAttrKeyHelper": "The first name of the user or the full name if 'Last name' is not provided.",
    "lastNameAttrKey": "Last name",
    "lastNameAttrKeyHelper": "Last name of the user (optional). Clear this value to provide the full name via 'First name'."
  },
  "createSettingsAuthProviderModal": {
    "title": "Add a new {type}"
  },
  "updateSettingsAuthProviderModal": {
    "title": "Edit {name}"
  },
  "deleteAuthProviderModal": {
    "title": "Delete {name}",
    "comment": "Do you really want to delete this {type}?"
  },
  "loginWithSaml": {
    "signInWithSaml": "Login with SAML SSO",
    "redirecting": "Redirecting to the Identity Provider...",
    "continueWithSaml": "Continue to the SAML SSO provider",
    "requestError": "This domain is not configured with SAML SSO",
    "loginText": "Already have a password?"
  },
  "loginError": {
    "title": "Something went wrong:",
    "loginText": "Already have an account?",
    "help": "Please contact your administrator for help.",
    "defaultErrorMessage": "it was not possible to complete the SSO login flow.",
    "errorSsoFeatureNotActive": "SSO feature is not active. Please contact your administrator.",
    "errorInvalidSamlRequest": "SAML request is invalid.",
    "errorInvalidSamlResponse": "SAML response is invalid.",
    "errorUserDeactivated": "user has been disabled.",
    "errorProviderDoesNotExist": "this authentication provider doesn't exist or is not available.",
    "errorAuthFlowError": "an error occurred during the authentication flow with the selected provider.",
    "errorDifferentProvider": "please use the provider that you originally signed up with.",
    "errorWorkspaceInvitationEmailMismatch": "your email address does not match with the invitation.",
    "errorSignupDisabled": "sign up has been disabled by the administrator."
  },
  "roles": {
    "admin": {
      "name": "Admin",
      "description": "Can fully configure and edit workspaces and applications."
    },
    "builder": {
      "name": "Builder",
      "description": "Can fully configure and edit applications."
    },
    "editor": {
      "name": "Editor",
      "description": "Can fully edit data but not configure applications or workspaces."
    },
    "commenter": {
      "name": "Commenter",
      "description": "Can only read and comment on data."
    },
    "viewer": {
      "name": "Viewer",
      "description": "Can only read data."
    },
    "noAccess": {
      "name": "No access",
      "description": "Can't access anything."
    },
    "noRoleLowPriority": {
      "name": "No role",
      "description": "Get default workspace role from their teams."
    }
  },
  "memberRolesModal": {
    "memberRolesDatabaseTabTitle": "Database",
    "memberRolesTableTabTitle": "Current Table",
    "error": {
      "title": "Could not fetch data",
      "description": "An error occurred while fetching the member data."
    }
  },
  "memberRolesTab": {
    "database": {
      "title": "{name} database",
      "selectMembers": "Select members",
      "everyoneHasAccess": "Everyone at {name} workspace can access this database.",
      "onlyYouHaveAccess": "Only you can access this database.",
      "warningTitle": "Other users might inherit access!",
      "warningMessage": "Other users might inherit access via their respective roles on the parent workspace.",
      "headerTooltip": "Database roles will override workspace roles."
    },
    "table": {
      "title": "{name} table",
      "selectMembers": "Select members",
      "everyoneHasAccess": "Everyone at {name} workspace can access this table.",
      "onlyYouHaveAccess": "Only you can access this table.",
      "warningTitle": "Other users might inherit access!",
      "warningMessage": "Other users might inherit access via their respective roles on the parent database or workspace.",
      "headerTooltip": "Table roles will override workspace and database roles."
    }
  },
  "memberRolesShareToggle": {
    "label": "Share with everyone at {name}",
    "subLabel": "{totalUserAmount} workspace members"
  },
  "memberRolesDatabaseContexItem": {
    "label": "Manage members",
    "additionalRoles": "Additional roles"
  },
  "memberRolesTableContexItem": {
    "label": "Manage members",
    "additionalRoles": "Additional roles"
  },
  "memberRolesMembersList": {
    "remove": "Remove",
    "teamMembersCount": "{count} team members",
    "adminHelpText": "Admins can restrict other admins roles.",
    "noMembers": "No members have been selected. Use the select button to add one."
  },
  "roleAssignmentModal": {
    "membersTab": "Members",
    "teamsTab": "Teams",
    "subjectTypeNameMembers": "members",
    "subjectTypeNameTeams": "teams"
  },
  "selectMembersList": {
    "searchPlaceholder": "Find members...",
    "selectedAmountLabel": "{count} members selected"
  },
  "selectTeamsList": {
    "searchPlaceholder": "Find teams...",
    "selectedAmountLabel": "{count} teams selected"
  },
  "selectSubjectsListFooter": {
    "invite": "Invite {count} {type}",
    "types": {
      "members": "members",
      "teams": "teams"
    },
    "helpTooltip": "Member role assignments override team role assignments."
  },
  "membersRoleField": {
    "noAccessHelpText": "This user requires explicit access to resources.",
    "adminHelpText": "Admins can restrict other admins roles."
  },
  "membersPagePlugin": {
    "roleHelpText": "Can be overriden with roles on databases and tables."
  },
  "oauthSettingsForm": {
    "providerName": "Name",
    "providerNamePlaceholder": "Custom provider name",
    "clientId": "Client ID",
    "clientIdPlaceholder": "Provider's client ID",
    "secret": "Secret",
    "secretPlaceholder": "Provider's secret",
    "baseUrl": "URL",
    "baseUrlPlaceholder": "Provider's base URL",
    "duplicateBaseUrl": "The entered URL already exists in another provider",
    "invalidBaseUrl": "The entered URL is not a valid provider URL",
    "useIdToken": "Use id token to get user information",
    "responseSettings": "OIDC Response Attributes",
    "defaultAttrs": "Default",
    "customAttrs": "Custom",
    "emailAttrKey": "Email",
    "emailAttrKeyHelper": "The email address that will be used as username for the user. ",
    "firstNameAttrKey": "First name",
    "lastNameAttrKey": "Last Name",
    "firstNameAttrKeyHelper": "The first name of the user or the full name if 'Last name' is not provided.",
    "lastNameAttrKeyHelper": "Last name of the user (optional). Clear this value to provide the full name via 'First name'.",
    "callbackUrl": "Callback URL"
  },
  "loginButton": {
    "continueWith": "Continue with"
  },
  "enterpriseFeatures": {
    "sso": "Single Sign On",
    "ssoContent": "Enable secure and seamless logins with SAML, Google, Facebook, GitHub, GitLab, or OpenID Connect. Supports multiple providers at once. Note that both Baserow as a tool, and the application builder authentication system support SSO.",
    "rbac": "Role-based access control",
    "rbacContent": "Manage permissions with precision. Assign roles like admin, builder,  editor, commenter, or viewer at the workspace, database, or table level. You can also manage access by team.",
    "auditLogs": "Audit logs",
    "auditLogsContent": "Track everything that happens. View a full history of actions across your instance or workspace, filterable by user, action, and more.",
    "dataSync": "Data sync",
    "dataSyncContent": "Automatically keep tables up to date by syncing with other Baserow tables, or external sources like Jira, GitHub, GitLab, or HubSpot.",
    "coBranding": "Co-branding logo replacement",
    "coBrandingContent": "Customize the Baserow interface with your own logo. Note that \"powered by Baserow\" is added.",
    "support": "Direct support",
    "supportContent": "Get help when you need it. Reach out to the Baserow team directly from within the platform.",
    "advancedWebhooks": "Advanced webhooks",
    "advancedWebhooksContent": "Trigger webhooks when a row enters a specific view — great for automating workflows based on filter conditions.",
    "fieldLevelPermissions": "Field-level permissions",
    "fieldLevelPermissionsContent": "Control who can edit specific fields in a table. Set permissions for editors, builders, admins, or completely disable modifications to field values.",
    "builderBranding": "Application branding",
    "builderBrandingContent": "White label the branding of your application by removing the 'Made with Baserow' branding in the footer of your application.",
    "builderFileInputElement": "File input element",
    "builderFileInputElementContent": "The file input element allows you to add a field to your application pages for uploading files. Give your users the ability to store important documents or images.",
    "builderCustomCode": "Custom code for applications",
    "builderCustomCodeContent": "You can add custom CSS/JavaScript code to further customize the look and behaviour of your application. For example, you can integrate external services like analytics or social media."
  },
  "chatwootSupportSidebarWorkspace": {
    "directSupport": "Direct support"
  },
  "userTeamsField": {
    "no_records": "No teams"
  },
  "snapshotModalWarning": {
    "message": "Please be aware that a snapshot will include any permissions set on the application and its tables."
  },
  "exportWorkspaceModalWarning": {
    "message": "Please be aware that an export will not include any permissions set on the application and its tables."
  },
  "auditLogSidebarWorkspace": {
    "title": "Audit log"
  },
  "localBaserowUserSourceType": {
    "notConfigured": "Not configured"
  },
  "localBaserowUserSourceForm": {
    "description": "Every row in the table is a user account. Please select the matching fields in the table. The email field will be used to identify.",
    "emailFieldLabel": "Select email field",
    "emailFieldLabelPlaceholder": "Select a field...",
    "noFields": "No fields",
    "nameFieldLabel": "Select name field",
    "nameFieldPlaceholder": "Select a field...",
    "roleFieldLabel": "Select role field",
    "roleFieldPlaceholder": "Select a field..."
  },
  "appAuthProviderType": {
    "localBaserowPassword": "Email/Password",
    "commonSaml": "Saml SSO",
    "openIdConnect": "OpenID Connect"
  },
  "localBaserowPasswordAppAuthProviderForm": {
    "passwordFieldLabel": "Select password field",
    "noFields": "No compatible fields"
  },
  "commonSamlSettingForm": {
    "relayStateTitle": "Default Relay State URL (Click to copy)",
    "acsTitle": "Single Sign On url (Click to copy)",
    "addDomainNotice": "Available when one or more domains have been added"
  },
  "commonOidcSettingForm": {
    "callbackTitle": "Callback URLs (Click to copy)",
    "callbackHelperText": "Add these URLs to your Openid connect provider redirect URI settings.",
    "preview": "Preview"
  },
  "enterpriseSettings": {
    "branding": "Branding",
    "showBaserowHelpMessage": "Show help message",
    "showBaserowHelpMessageDescription": "Indicates whether the help request message should be shown on the dashboard.",
    "deactivated": "Available in enterprise",
    "coBrandingLogo": "Logo",
    "coBrandingLogoDescription": "Replaces the Baserow logo for a custom co-branded alternative (176x29). If set, it also removes the Baserow description in the footer of all emails.",
    "uploadFileButton": "Upload image"
  },
  "authFormElementForm": {
    "userSource": "User source",
    "loginButtonLabel": "Login button label",
    "loginButtonLabelPlaceholder": "Enter the label..."
  },
  "authFormElement": {
    "email": "Email",
    "password": "Password",
    "emailPlaceholder": "Enter your email...",
    "passwordPlaceholder": "Enter your password...",
    "selectOrConfigureUserSourceFirst": "Choose a user source to begin using this login element."
  },
  "enterpriseDataSyncType": {
    "localBaserowTable": "Sync Baserow table",
    "jiraIssues": "Sync Jira issues",
    "githubIssues": "Sync GitHub issues",
    "gitlabIssues": "Sync GitLab issues",
    "hubspotContacts": "Sync HubSpot contacts"
  },
  "localBaserowTableDataSync": {
    "name": "Source table ID",
    "authorizing": "You're authorizing your account to select the data from the source table.",
    "workspace": "Workspace",
    "database": "Database",
    "table": "Table",
    "view": "View",
    "viewHelper": "Only visibile fields and rows matching the filters are synced."
  },
  "jiraIssuesDataSync": {
    "jiraUrl": "Jira instance URL",
    "urlHelper": "The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).",
    "authenticationLabel": "Authentication",
    "authenticationHelper": "Choose how to authenticate with Jira.",
    "projectKey": "Jira project key (optional)",
    "projectKeyHelper": "The project key of the Jira project (e.g., PROJ). Can be found by clicking on `Project settings` in Jira. If not provided, all the issues will be returned.",
    "jiraUsername": "Jira username",
    "usernameHelper": "The username of the Jira account used to authenticate. This is the email that you use to sign in.",
    "apiToken": "Jira API token",
    "apiTokenHelper": "The API token of the Jira account used for authentication. Can be created at https://id.atlassian.com/manage-profile/security/api-tokens.",
    "personalAccessToken": "Jira Personal Access Token",
    "personalAccessTokenHelper": "The API token of the Jira account used for authentication. Can be created at https://confluence.atlassian.com/enterprise/using-personal-access-tokens-1026032365.html."
  },
  "githubIssuesDataSync": {
    "owner": "Owner",
    "ownerHelper": "Username or owner of the repository. Typically in the top left corner `owner / repo`",
    "repo": "Repository",
    "repoHelper": "The name of the repository. Typically in the top left corner `owner / repo`",
    "apiToken": "API token",
    "apiTokenHelper": "Can be generated here https://github.com/settings/tokens by clicking on `Generate new token`, select `All repositories`, then under `Repository permissions` set `Issues` to `read-only`."
  },
  "gitlabIssuesDataSync": {
    "url": "Base URL",
    "urlHelper": "The base URL of your GitLab instance. (e.g. https://gitlab.com)",
    "projectId": "Project ID",
    "projectIdHelper": "The ID of the project where you want to sync the issues from. Can be found by going to your project page (e.g. https://gitlab.com/baserow/baserow), click on the three dots in the top right corner, and then on 'Copy project ID: 12345678'.",
    "accessToken": "Access token",
    "accessTokenHelper": "Can be generated here https://gitlab.com/-/user_settings/personal_access_tokens by clicking on `Add new token`, select `read_api`."
  },
  "hubspotContactsDataSync": {
    "accessToken": "Private app access token",
    "accessTokenHelper": "To generate a private app access token in HubSpot, click on Settings in the top bar, navigate to Integrations > Private Apps, and create a new private app. Assign the following scopes: crm.objects.contacts.read, crm.schemas.contacts.read, and crm.objects.custom.read. Finally, click Create app to generate the token."
  },
  "samlAuthLink": {
    "placeholderWithSaml": "{login} with SAML",
    "provideEmail": "Provide your SAML account email",
    "emailPlaceholder": "Enter your email..."
  },
  "configureDataSyncModal": {
    "periodicInterval": "Periodic settings"
  },
  "configureDataSyncPeriodicInterval": {
    "title": "Periodic settings",
    "saved": "Saved",
    "deactivatedTitle": "Periodic data sync deactivated",
    "deactivatedText": "The periodic data sync was deactivated because it failed to many consecutive times. Please try to sync manually, and if it works as expected, then click on the activate button.",
    "activate": "Activate periodic sync",
    "enterprise": "Periodic data sync is an advanced/enterprise feature.",
    "more": "More information"
  },
  "dataSyncPeriodicIntervalForm": {
    "intervalLabel": "Interval",
    "intervalHelper": "How frequently should the the data sync automatically sync.",
    "manual": "Manual",
    "daily": "Daily",
    "hourly": "Hourly",
    "whenHelper": "Provide the exact hour, minute, and second when the data sync should sync.",
    "whenHourlyHelper": "Provide the exact minute, and second when the data sync should sync.",
    "hour": "Hour",
    "minute": "Minute",
    "second": "Second"
  },
  "oidcAuthLink": {
    "placeholderWithOIDC": "{login} with {provider}"
  },
  "chartWidget": {
    "name": "Chart"
  },
  "groupedAggregateRowsDataSourceForm": {
    "series": "Series",
    "addSeries": "Add series",
    "data": "Data",
    "sourceFieldLabel": "Source",
    "viewFieldLabel": "View",
    "notSelected": "Not selected"
  },
  "aggregationSeriesForm": {
    "aggregationFieldLabel": "Field",
    "aggregationTypeLabel": "Summary",
    "deleteSeries": "Delete series",
    "chartType": "Chart type",
    "barChart": "Bar",
    "lineChart": "Line"
  },
  "aggregationGroupByForm": {
    "groupByFieldLabel": "Group by",
    "groupByNone": "None",
    "groupByRowId": "Row Id"
  },
  "aggregationSortByForm": {
    "sortByFieldLabel": "Sort by",
    "none": "None",
    "ascending": "Ascending",
    "descending": "Descending"
  },
  "periodicDataSyncDeactivatedNotification": {
    "body": "{name} periodic data sync has been deactivated because it failed too many times consecutively."
  },
  "webhook": {
    "rowsEnterVieweventType": "Rows enter view"
  },
  "webhookForm": {
    "triggerWhenRowsEnterView": "Triggered when rows enter the view.",
    "helpTriggerWhenRowsEnterView": "Triggers only when `Rows enter view` is selected and rows that now match the filters enter the view."
  },
  "fileInputElementForm": {
    "defaultNameTitle": "Initial file name|Initial file names",
    "defaultNamePlaceholder": "Enter a file name...|Enter a file names...",
    "defaultNameHelp": "The number of names must match the number of urls.",
    "defaultUrlTitle": "Initial file URL|Initial file URLs",
    "defaultUrlPlaceholder": "Enter a default URL...|Enter a default URLs..",
    "helpTextTitle": "Help text",
    "helpTextPlaceholder": "Keep empty for default...",
    "multiple": "Multiple files?",
    "required": "Required",
    "fileTypes": "File types",
    "fileTypesHelper": "Choose which file extensions are allowed (one per line) by the file input (e.g. jpg, png, svg, pdf). you can specify image/*, video/* or audio/* to allow all files of these types. Leave empty to permit all file types.",
    "preview": "Preview images?",
    "maxFileSize": "Maximum file size",
    "maxFileSizePlaceholder": "Enter a number...",
    "addFileType": "Add file type"
  },
  "fileInputElement": {
    "defaultHelpText": "Drag and drop files here or click to select",
    "fileSizeExceeded": "File too large. Max {max}MB."
  },
  "fieldPermissionModal": {
    "title": "Edit field permissions",
    "description": "Choose who can edit values in {fieldName}.",
    "question": "Who can edit this field?",
    "editorTitle": "Editors and higher (default)",
    "editorDescription": "Users with Editor, Builder, and Admin roles",
    "builderTitle": "Builders and higher",
    "builderDescription": "Users with Builder and Admin roles",
    "adminTitle": "Admins only",
    "adminDescription": "Users with Admin roles",
    "nobodyTitle": "Nobody",
    "nobodyDescription": "No users",
    "allowInForms": "Allow this field to be set in rows created through forms",
    "linkRowWarning": "This is a 'Link to table' field. To ensure values cannot be changed from the linked table, please make ensure to set the right permissions on the linked table as well."
  },
  "builderSettingTypes": {
    "customCode": "Custom CSS/JS"
  },
  "customCodeSettingForm": {
    "customCSS": "Custom CSS",
    "customJS": "Custom JavaScript",
    "customCSSPlaceholder": "Enter some custom CSS code...",
    "customJSPlaceholder": "Enter some custom JS code...",
    "externalScripts": "External scripts / stylesheets",
    "noScript": "Enhance your application with external scripts or stylesheets",
    "customCodeTitle": "Custom code",
    "customCodeHelp": "Custom code is only visible in preview or published applications, The results aren't visible in the editor.",
    "addExternalScript": "Add an external script"
  },
  "customCodeSettingScriptForm": {
    "type": "Type",
    "loadType": "Load type",
    "url": "URL",
    "urlPlaceholder": "Enter the script URL...",
    "crossorigin": "Cross origin",
    "includeCredentials": "Include credentials",
    "typeCSS": "CSS",
    "typeJS": "Javascript",
    "loadTypeNone": "Normal",
    "loadTypeDefer": "Defer",
    "loadTypeAsync": "Async",
    "crossoriginTypeNone": "Normal",
    "crossoriginTypeAnonymous": "Anonymous",
    "crossoriginTypeCredentials": "Use credentials"
  },
  "elementType": {
    "errorUserSourceHasNoLoginOption": "The selected user source has no login option",
    "errorUserSourceMissing": "No user source selected"
  },
  "fieldPermissionsMenuItem": {
    "label": "Edit field permissions"
  }
}
