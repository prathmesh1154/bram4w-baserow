# Generated by Django 5.0.9 on 2025-04-02 09:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("baserow_premium", "0024_alter_aifield_ai_generative_ai_model"),
        ("core", "0097_userprofile_completed_guided_tours"),
        ("dashboard", "0003_widget_dashboarddatasource_summarywidget"),
        ("database", "0186_alter_formviewfieldoptionscondition_value_and_more"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name="ChartWidget",
                    fields=[
                        (
                            "widget_ptr",
                            models.OneToOneField(
                                auto_created=True,
                                on_delete=django.db.models.deletion.CASCADE,
                                parent_link=True,
                                primary_key=True,
                                serialize=False,
                                to="dashboard.widget",
                            ),
                        ),
                        (
                            "data_source",
                            models.ForeignKey(
                                help_text="Data source for fetching the result to display.",
                                on_delete=django.db.models.deletion.PROTECT,
                                to="dashboard.dashboarddatasource",
                            ),
                        ),
                    ],
                    options={
                        "abstract": False,
                    },
                    bases=("dashboard.widget",),
                ),
                migrations.CreateModel(
                    name="LocalBaserowGroupedAggregateRows",
                    fields=[
                        (
                            "service_ptr",
                            models.OneToOneField(
                                auto_created=True,
                                on_delete=django.db.models.deletion.CASCADE,
                                parent_link=True,
                                primary_key=True,
                                serialize=False,
                                to="core.service",
                            ),
                        ),
                        (
                            "filter_type",
                            models.CharField(
                                choices=[("AND", "And"), ("OR", "Or")],
                                default="AND",
                                help_text="Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).",
                                max_length=3,
                            ),
                        ),
                        (
                            "table",
                            models.ForeignKey(
                                default=None,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to="database.table",
                            ),
                        ),
                        (
                            "view",
                            models.ForeignKey(
                                default=None,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to="database.view",
                            ),
                        ),
                    ],
                    options={
                        "abstract": False,
                    },
                    bases=("core.service", models.Model),
                ),
                migrations.CreateModel(
                    name="LocalBaserowTableServiceAggregationGroupBy",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        ("order", models.PositiveIntegerField()),
                        (
                            "field",
                            models.ForeignKey(
                                help_text="The field to use in group by.",
                                null=True,
                                on_delete=django.db.models.deletion.CASCADE,
                                to="database.field",
                            ),
                        ),
                        (
                            "service",
                            models.ForeignKey(
                                help_text="The service which this aggregation series belongs to.",
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="service_aggregation_group_bys",
                                to="core.service",
                            ),
                        ),
                    ],
                    options={
                        "ordering": ("order", "id"),
                    },
                ),
                migrations.CreateModel(
                    name="LocalBaserowTableServiceAggregationSeries",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        (
                            "aggregation_type",
                            models.CharField(
                                blank=True,
                                default="",
                                help_text="The field aggregation type.",
                                max_length=48,
                            ),
                        ),
                        ("order", models.PositiveIntegerField()),
                        (
                            "field",
                            models.ForeignKey(
                                help_text="The aggregated field.",
                                null=True,
                                on_delete=django.db.models.deletion.CASCADE,
                                to="database.field",
                            ),
                        ),
                        (
                            "service",
                            models.ForeignKey(
                                help_text="The service which this aggregation series belongs to.",
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="service_aggregation_series",
                                to="core.service",
                            ),
                        ),
                    ],
                    options={
                        "ordering": ("order", "id"),
                    },
                ),
                migrations.CreateModel(
                    name="LocalBaserowTableServiceAggregationSortBy",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        (
                            "sort_on",
                            models.CharField(
                                choices=[
                                    ("SERIES", "Series"),
                                    ("GROUP_BY", "Group by"),
                                    ("PRIMARY", "Primary"),
                                ],
                                max_length=255,
                            ),
                        ),
                        ("reference", models.CharField(max_length=255)),
                        (
                            "direction",
                            models.CharField(
                                choices=[("ASC", "Ascending"), ("DESC", "Descending")],
                                max_length=255,
                            ),
                        ),
                        ("order", models.PositiveIntegerField()),
                        (
                            "service",
                            models.ForeignKey(
                                help_text="The service which this aggregation series belongs to.",
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="service_aggregation_sorts",
                                to="core.service",
                            ),
                        ),
                    ],
                    options={
                        "ordering": ("order", "id"),
                    },
                ),
            ],
            database_operations=[],
        ),
    ]
